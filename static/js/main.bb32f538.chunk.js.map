{"version":3,"sources":["images/buns.jpg","images/calculator.svg","registerServiceWorker.js","index.js","components/Close.js","components/Ingredient.js","components/IngredientList.js","utils.js","pages/Result.js","components/Input.js","pages/Calculator.js"],"names":["module","exports","__webpack_require__","p","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","deferredPrompt","Close","_ref","color","react_default","a","createElement","Link","to","className","width","height","viewBox","fill","xmlns","role","aria-label","d","Ingredient","percent","toFixed","total","_this","this","props","intro","name","percentage","formatPercentage","formatTotalOfIngredient","absolute","count","description","breakdown","map","ing","i","key","Component","IngredientList","components_Close","ingredients","Ingredient_Ingredient","defaultOptions","flour","water","butter","egg","salt","sugar","dryYeast","freshYeast","dryYeastPerBun","parseNum","value","parseFloat","undefined","Result","parsedOptions","parsed","qs","search","base","Object","objectSpread","dryYeastPercent","options","freshYeastPercent","ingredientsListYeast","IngredientList_IngredientList","Input","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_this2","type","id","min","max","step","onChange","event","setState","target","required","htmlFor","label","children","React","Calculator","handleCountChange","e","opts","concat","weight","src","logo","alt","calculator","components_Input","buildParameters","href","ReactDOM","render","BrowserRouter","basename","process","Route","react_transition_group","timeout","classNames","Switch","exact","path","component","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","btnAdd","preventDefault","style","display","prompt","userChoice","choiceResult","outcome"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,6MCUlCC,SAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,4DA6BN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBC,MAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,SCtC7DC,6DCRWC,EArBD,SAAAC,GAAe,IAAZC,EAAYD,EAAZC,MACf,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,IAAIC,UAAU,SACrBL,EAAAC,EAAAC,cAAA,OACEI,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BACNC,KAAK,MACLC,aAAW,QAEXZ,EAAAC,EAAAC,cAAA,QACEW,EAAE,iGACFJ,KAAMV,OCfKe,2LACFC,GACf,OAAkB,IAAVA,GAAeC,QAAQ,GAAK,oDAGdC,GACtB,OAAQA,EAAOD,QAAQ,oCAGhB,IAAAE,EAAAC,KACP,OACEnB,EAAAC,EAAAC,cAAA,OAAKG,UAAW,uBAAyBc,KAAKC,MAAMC,MAAQ,4BAA8B,KACxFrB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,mBACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,sBAAsBc,KAAKC,MAAME,MAChDtB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,6BACZc,KAAKC,MAAMG,WAAaJ,KAAKK,iBAAiBL,KAAKC,MAAMG,YAAc,IAE1EvB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,6BACbL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,qBACVc,KAAKM,wBAAwBN,KAAKC,MAAMM,SAAWP,KAAKC,MAAMO,QAEjE3B,EAAAC,EAAAC,cAAA,oBAGJF,EAAAC,EAAAC,cAAA,OAAKG,UAAU,0BACZc,KAAKC,MAAMQ,aAEd5B,EAAAC,EAAAC,cAAA,OAAKG,UAAU,uBACZc,KAAKC,MAAMS,UAAUC,IAAI,SAACC,EAAKC,GAC9B,OACEhC,EAAAC,EAAAC,cAAA,OAAK+B,IAAKD,EAAG3B,UAAU,8CACrBL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,sBAAsB0B,EAAIT,MACzCtB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,6BACZa,EAAKM,iBAAiBO,EAAIR,aAE7BvB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,6BACbL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,qBACVa,EAAKO,wBAAwBM,EAAIL,SAAWR,EAAKE,MAAMO,QAE1D3B,EAAAC,EAAAC,cAAA,+BAvCsBgC,aCEnBC,mLACV,IAAAjB,EAAAC,KACP,OACEnB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACbL,EAAAC,EAAAC,cAAA,QAAMG,UAAU,QACdL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,eACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,iBACbL,EAAAC,EAAAC,cAAA,uCAC6BiB,KAAKC,MAAMO,MAAO,IAC5CR,KAAKC,MAAMO,MAAQ,EAAI,OAAS,QAGrC3B,EAAAC,EAAAC,cAACkC,EAAD,CAAOrC,MAAM,WAEdoB,KAAKC,MAAMiB,YAAYP,IAAI,SAACC,EAAKC,GAChC,OACEhC,EAAAC,EAAAC,cAACoC,EAAD,CACEhB,KAAMS,EAAIT,KACVC,WAAYQ,EAAIR,WAChBG,SAAUK,EAAIL,SACdG,UAAWE,EAAIF,UAAYE,EAAIF,UAAY,GAC3CD,YAAaG,EAAIH,YACjBD,MAAOT,EAAKE,MAAMO,MAClBM,IAAKD,EACLX,MAAOU,EAAIV,mBAxBiBa,aCJ/BK,EAAiB,WAI1B,MAAO,CACNZ,MAAO,EACJa,MAAO,MACPC,MAAO,MACPC,OAAQ,IACRC,IAAK,KACLC,KAAM,EACNC,MAAO,KACPC,SAXmB,OAYnBC,WAXqBC,SCIvBC,EAAW,SAACC,GAAD,OAAWA,EAAQC,WAAWD,QAASE,GAgCzCC,EAvBA,SAAAjC,GACb,IAR8BkC,EAQxBC,EAASC,QAASpC,EAAM5C,SAASiF,QACjCC,EAAIC,OAAAC,EAAA,EAAAD,CAAA,GACLpB,IAV4C,CAC/CZ,MAAOsB,GADqBK,EAWFC,GAVI5B,OAC9BiB,KAAMK,EAASK,EAAcV,MAC7BH,MAAOQ,EAASK,EAAcb,OAC9BoB,gBAAiBZ,EAASK,EAAcO,mBAUpCC,EAAOH,OAAAC,EAAA,EAAAD,CAAA,GACRD,EADQ,CAEXK,kBAA2C,EAAvBL,EAAKG,kBAIrBxB,EDX4B,SAACyB,GA+CnC,MAnCoB,CAClB,CACExC,KAAM,QACNI,SALEoC,EARAtB,OAeJ,CACElB,KAAM,QACNI,SATEoC,EAPArB,OAkBJ,CACEnB,KAAM,SACNI,SAbEoC,EANApB,QAqBJ,CACEpB,KAAM,SACNI,SAjBEoC,EALAnB,KAwBJ,CACErB,KAAM,OACNI,SArBEoC,EAJAlB,MA2BJ,CACEtB,KAAM,QACNI,SAzBEoC,EAHAjB,OA8BJ,CACEvB,KAAM,YACNI,SA7BEoC,EAFAhB,UAiCJ,CACExB,KAAM,oBACNI,SAjCEoC,EADAf,aCEciB,CAAqBF,GAEzC,OACE9D,EAAAC,EAAAC,cAAC+D,EAAD,CACEtC,MAAOmC,EAAQnC,MACfU,YAAaA,uCCGJ6B,cAjCb,SAAAA,EAAY9C,GAAO,IAAAF,EAAA,OAAAyC,OAAAQ,EAAA,EAAAR,CAAAxC,KAAA+C,IACjBhD,EAAAyC,OAAAS,EAAA,EAAAT,CAAAxC,KAAAwC,OAAAU,EAAA,EAAAV,CAAAO,GAAAI,KAAAnD,KAAMC,KACD9B,MAAQ,CACX4D,MAAO9B,EAAM8B,OAHEhC,wEAOV,IAAAqD,EAAApD,KACP,OACEnB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACbL,EAAAC,EAAAC,cAAA,SACEsE,KAAK,SACLC,GAAItD,KAAKC,MAAMqD,GACfpE,UAAU,aACVqE,IAAI,IACJC,IAAI,OACJC,KAAMzD,KAAKC,MAAMwD,KACjB1B,MAAO/B,KAAK7B,MAAM4D,MAClB2B,SAAU,SAAAC,GACRP,EAAKQ,SAAS,CAAE7B,MAAO4B,EAAME,OAAO9B,QACpCqB,EAAKnD,MAAMyD,SAASC,IAEtBG,UAAQ,IAEVjF,EAAAC,EAAAC,cAAA,SAAOG,UAAU,aAAa6E,QAAS/D,KAAKC,MAAMqD,IAC/CtD,KAAKC,MAAM+D,OAEbhE,KAAKC,MAAMgE,iBA5BAC,IAAMnD,WCoEXoD,cA5Db,SAAAA,EAAYlE,GAAO,IAAAF,EAAA,OAAAyC,OAAAQ,EAAA,EAAAR,CAAAxC,KAAAmE,IACjBpE,EAAAyC,OAAAS,EAAA,EAAAT,CAAAxC,KAAAwC,OAAAU,EAAA,EAAAV,CAAA2B,GAAAhB,KAAAnD,KAAMC,KAIRmE,kBAAoB,SAAAC,GAClBtE,EAAK6D,SAAS,CAAEpD,MAAO6D,EAAER,OAAO9B,SAJhChC,EAAK5B,MAAQiD,IAFIrB,iFAUjB,IAAMuE,EAAI9B,OAAAC,EAAA,EAAAD,CAAA,GACLpB,IADK,CAERZ,MAAOR,KAAK7B,MAAMqC,QAEpB,gBAAA+D,OAAiBD,EAAKE,OAAtB,WAAAD,OAAsCD,EAAK9D,MAA3C,WAAA+D,OAA0DD,EAAKhD,MAA/D,UAAAiD,OAA6ED,EAAK7C,KAAlF,qBAAA8C,OAA0GD,EAAK5B,kDAI/G,OACE7D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQG,UAAU,UAChBL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,QACZL,EAAAC,EAAAC,cAAA,OAAK0F,IAAKC,IAAMvF,MAAM,MAAMC,OAAO,OAAOuF,IAAI,oBAEhD9F,EAAAC,EAAAC,cAAA,MAAIG,UAAU,QACZL,EAAAC,EAAAC,cAAA,OAAK0F,IAAKG,IAAYD,IAAI,iBAG9B9F,EAAAC,EAAAC,cAAA,QAAMG,UAAU,QACdL,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAC8F,EAAD,CACEvB,GAAG,QACHI,SAAU1D,KAAKoE,kBACfJ,MAAM,iBACNjC,MAAO/B,KAAK7B,MAAMqC,MAClBiD,KAAK,KAEL5E,EAAAC,EAAAC,cAAA,SAAOG,UAAU,cAAjB,iDAKFL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,qBACbL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAE,qBAAAsF,OAAuBvE,KAAK8E,oBAApC,eAGJjG,EAAAC,EAAAC,cAAA,OAAKG,UAAU,aACbL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,mBACbL,EAAAC,EAAAC,cAAA,KAAGgG,KAAK,yEAAR,YAGJlG,EAAAC,EAAAC,cAAA,OAAKG,UAAU,iBAAiBoE,GAAG,OAAnC,8BApDeY,IAAMnD,WPE/BiE,IAASC,OACPpG,EAAAC,EAAAC,cAACmG,EAAA,EAAD,CAAeC,SAAUC,gBACvBvG,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CACEJ,OAAQ,SAAAtG,GAAkB,IAAftB,EAAesB,EAAftB,SACT,OACEwB,EAAAC,EAAAC,cAACuG,EAAA,gBAAD,CAAiBpG,UAAU,aACzBL,EAAAC,EAAAC,cAACuG,EAAA,cAAD,CAAexE,IAAKzD,EAASyD,IAAKyE,QAAS,IAAKC,WAAW,QACzD3G,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAQpI,SAAUA,GAChBwB,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAOK,OAAK,EAACC,KAAK,IAAIC,UAAWzB,IACjCtF,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAOM,KAAK,UAAUC,UAAW1D,WAQ/C2D,SAASC,eAAe,SDRX,WACb,GAA6C,kBAAmBpI,UAAW,CAGzE,GADkB,IAAIqI,IAAIX,eAAwBhI,OAAOC,UAC3C2I,SAAW5I,OAAOC,SAAS2I,OAIvC,OAGF5I,OAAO6I,iBAAiB,OAAQ,WAC9B,IAAMxI,EAAK,GAAA8G,OAAMa,eAAN,sBAENlI,EAwCX,SAAiCO,GAE/ByI,MAAMzI,GACHI,KAAK,SAAAsI,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7C7I,UAAUC,cAAc6I,MAAM3I,KAAK,SAAAC,GACjCA,EAAa2I,aAAa5I,KAAK,WAC7BT,OAAOC,SAASqJ,aAKpBlJ,EAAgBC,KAGnBc,MAAM,WACLF,QAAQC,IACN,mEAzDAqI,CAAwBlJ,GAHxBD,EAAgBC,MCNxBmJ,GAGA,IAAMC,EAAShB,SAASC,eAAe,OAEnCe,IACFzJ,OAAO6I,iBAAiB,sBAAuB,SAAA5B,GAE7CA,EAAEyC,iBAEFrI,EAAiB4F,EACjBwC,EAAOE,MAAMC,QAAU,UAGzBH,EAAOZ,iBAAiB,QAAS,SAAA5B,GAE/BwC,EAAOE,MAAMC,QAAU,OAEvBvI,EAAewI,SAEfxI,EAAeyI,WAAWrJ,KAAK,SAAAsJ,GACA,aAAzBA,EAAaC,QACf/I,QAAQC,IAAI,iCAEZD,QAAQC,IAAI,kCAEdG,EAAiB","file":"static/js/main.bb32f538.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/buns.2a189d5f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/calculator.9065bca0.svg\";","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\n\nimport \"./index.css\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nimport Result from \"./pages/Result\";\nimport Calculator from \"./pages/Calculator\";\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Route\n      render={({ location }) => {\n        return (\n          <TransitionGroup className=\"container\">\n            <CSSTransition key={location.key} timeout={200} classNames=\"fade\">\n              <Switch location={location}>\n                <Route exact path=\"/\" component={Calculator} />\n                <Route path=\"/result\" component={Result} />\n              </Switch>\n            </CSSTransition>\n          </TransitionGroup>\n        );\n      }}\n    />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\nregisterServiceWorker();\n\nlet deferredPrompt;\nconst btnAdd = document.getElementById(\"pwa\");\n\nif (btnAdd) {\n  window.addEventListener(\"beforeinstallprompt\", e => {\n    // Prevent Chrome 67 and earlier from automatically showing the prompt\n    e.preventDefault();\n    // Stash the event so it can be triggered later.\n    deferredPrompt = e;\n    btnAdd.style.display = \"block\";\n  });\n\n  btnAdd.addEventListener(\"click\", e => {\n    // hide our user interface that shows our A2HS button\n    btnAdd.style.display = \"none\";\n    // Show the prompt\n    deferredPrompt.prompt();\n    // Wait for the user to respond to the prompt\n    deferredPrompt.userChoice.then(choiceResult => {\n      if (choiceResult.outcome === \"accepted\") {\n        console.log(\"User accepted the A2HS prompt\");\n      } else {\n        console.log(\"User dismissed the A2HS prompt\");\n      }\n      deferredPrompt = null;\n    });\n  });\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Close = ({ color }) => {\n  return (\n    <Link to=\"/\" className=\"close\">\n      <svg\n        width=\"24\"\n        height=\"24\"\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        role=\"img\"\n        aria-label=\"Back\"\n      >\n        <path\n          d=\"M12 9.6L2.4 0L0 2.4L9.6 12L0 21.6L2.4 24L12 14.4L21.6 24L24 21.6L14.4 12L24 2.4L21.6 0L12 9.6Z\"\n          fill={color}\n        />\n      </svg>\n    </Link>\n  );\n};\n\nexport default Close;\n","import React, { Component } from \"react\";\n\nexport default class Ingredient extends Component {\n  formatPercentage(percent) {\n    return (percent * 100).toFixed(2) + \"%\";\n  }\n\n  formatTotalOfIngredient(total) {\n    return (total).toFixed(2);\n  }\n\n  render() {\n    return (\n      <div className={'ingredient-wrapper ' + (this.props.intro ? 'ingredient-wrapper--intro' : '')}>\n        <div className='ingredient-base'>\n          <div className=\"ingredient-element\">{this.props.name}</div>\n          <div className=\"ingredient-element number\">\n            {this.props.percentage ? this.formatPercentage(this.props.percentage) : ''}\n          </div>\n          <div className=\"ingredient-element number\">\n            <p className=\"ingredient-amount\">\n              {this.formatTotalOfIngredient(this.props.absolute * this.props.count)}\n            </p>\n            <p>&nbsp;g</p>\n          </div>\n        </div>\n        <div className='ingredient-explanation'>\n          {this.props.description}\n        </div>\n        <div className='ingredient-children'>\n          {this.props.breakdown.map((ing, i) => {\n            return (\n              <div key={i} className='ingredient-base ingredient-base--breakdown'>\n                <div className=\"ingredient-element\">{ing.name}</div>\n                <div className=\"ingredient-element number\">\n                  {this.formatPercentage(ing.percentage)}\n                </div>\n                <div className=\"ingredient-element number\">\n                  <p className=\"ingredient-amount\">\n                    {this.formatTotalOfIngredient(ing.absolute * this.props.count)}\n                  </p>\n                  <p>&nbsp;g</p>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Close from \"../components/Close\";\nimport Ingredient from \"../components/Ingredient\";\n\nexport default class IngredientList extends Component {\n  render() {\n    return (\n      <div className=\"result\">\n        <main className=\"main\">\n          <div className=\"view-header\">\n            <div className=\"result-header\">\n              <h2>\n                Required ingredients for: {this.props.count}{\" \"}\n                {this.props.count > 1 ? \"buns\" : \"bun\"}\n              </h2>\n            </div>\n            <Close color=\"white\" />\n          </div>\n          {this.props.ingredients.map((ing, i) => {\n            return (\n              <Ingredient\n                name={ing.name}\n                percentage={ing.percentage}\n                absolute={ing.absolute}\n                breakdown={ing.breakdown ? ing.breakdown : []}\n                description={ing.description}\n                count={this.props.count}\n                key={i}\n                intro={ing.intro}\n              />\n            );\n          })}\n        </main>\n      </div>\n    );\n  }\n}\n","export const defaultOptions = () => {\n    const dryYeastPerBun = 1.0625;\n    const freshYeastPerBun = dryYeastPerBun * 3;\n    // amount per bun\n    return {\n    \tcount: 8,\n        flour: 52.25,\n        water: 21.25,\n        butter: 3.5,\n        egg: 0.125,\n        salt: 1,\n        sugar: 6.25,\n        dryYeast: dryYeastPerBun,\n        freshYeast: freshYeastPerBun,\n    }\n};\n\nexport const ingredientsListYeast = (options) => {\n    const {\n        flour,\n        water,\n        butter,\n        egg,\n        salt,\n        sugar,\n        dryYeast,\n        freshYeast,\n    } = options;\n\n  const ingredients = [\n    {\n      name: \"Flour\",\n      absolute: flour,\n    },\n    {\n      name: \"Water\",\n      absolute: water,\n    },\n    { \n      name: \"Butter\",\n      absolute: butter,\n    },\n    {\n      name: \"Egg(s)\",\n      absolute: egg,\n    },\n    {\n      name: \"Salt\",\n      absolute: salt,\n    },\n    {\n      name: \"Sugar\",\n      absolute: sugar,\n    },\n    {\n      name: \"Dry Yeast\",\n      absolute: dryYeast,\n    },\n    {\n      name: \"...or Fresh Yeast\",\n      absolute: freshYeast,\n    },\n  ];\n\n  return ingredients;\n}\n","import React from \"react\";\nimport * as qs from \"query-string\";\n\nimport IngredientList from \"../components/IngredientList\";\nimport { defaultOptions, ingredientsListYeast } from \"../utils\";\n\nconst parseNum = (value) => value ? parseFloat(value) : undefined;\n\nconst optionsFromQueryString = (parsedOptions) => ({\n    count: parseNum(parsedOptions.count),\n    salt: parseNum(parsedOptions.salt),\n    water: parseNum(parsedOptions.water),\n    dryYeastPercent: parseNum(parsedOptions.dryYeastPercent),\n})\n\nconst Result = props => {\n  const parsed = qs.parse(props.location.search);\n  const base = {\n    ...defaultOptions(),\n    ...optionsFromQueryString(parsed)\n  };\n\n  const options = {\n    ...base,\n    freshYeastPercent: (base.dryYeastPercent * 3),\n  }\n\n//  const ingredients = parsed.yeast ? ingredientsListYeast(options) : ingredientsListSourdough(options);\n  const ingredients = ingredientsListYeast(options);\n\n  return (\n    <IngredientList\n      count={options.count}\n      ingredients={ingredients}\n    />\n  );\n};\n\nexport default Result;\n\n","import React from \"react\";\n\nclass Input extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: props.value\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"form-group\">\n        <input\n          type=\"number\"\n          id={this.props.id}\n          className=\"form-input\"\n          min=\"1\"\n          max=\"1000\"\n          step={this.props.step}\n          value={this.state.value}\n          onChange={event => {\n            this.setState({ value: event.target.value });\n            this.props.onChange(event);\n          }}\n          required\n        />\n        <label className=\"form-label\" htmlFor={this.props.id}>\n          {this.props.label}\n        </label>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nexport default Input;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n//import logo from \"../images/logo.svg\";\nimport logo from \"../images/buns.jpg\";\nimport calculator from \"../images/calculator.svg\";\nimport Input from \"../components/Input\";\nimport { defaultOptions } from \"../utils\";\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = defaultOptions();\n  }\n\n  handleCountChange = e => {\n    this.setState({ count: e.target.value });\n  };\n\n  buildParameters() {\n    const opts = {\n      ...defaultOptions(),\n      count: this.state.count,\n    };\n    return `weight=${opts.weight}&count=${opts.count}&water=${opts.water}&salt=${opts.salt}&dryYeastPercent=${opts.dryYeastPercent}`\n  }\n\n  render() {\n    return (\n      <div>\n        <header className=\"header\">\n          <h1 className=\"logo\">\n            <img src={logo} width=\"50%\" height=\"auto\" alt=\"Hamburger Buns\" />\n          </h1>\n          <h2 className=\"logo\">\n            <img src={calculator} alt=\"Calculator\" />\n          </h2>\n        </header>\n        <main className=\"main\">\n          <form>\n            <Input\n              id=\"count\"\n              onChange={this.handleCountChange}\n              label=\"Number of buns\"\n              value={this.state.count}\n              step=\"1\"\n            >\n              <small className=\"text-muted\">\n                1) Pick the number of buns you want to bake.\n              </small>\n            </Input>\n              \n            <div className=\"calculate-buttons\">\n              <Link to={`result?yeast=true&${this.buildParameters()}`}>Calculate</Link>\n            </div>\n          </form>\n          <div className=\"more-info\">\n            <div className=\"more-info-links\">\n              <a href=\"https://www.kingarthurbaking.com/recipes/beautiful-burger-buns-recipe\">Source</a>\n            </div>\n          </div>\n          <div className=\"text-muted pwa\" id=\"pwa\">\n            Add to homescreen\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Calculator;\n"],"sourceRoot":""}